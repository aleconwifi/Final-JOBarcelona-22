import streamlit as st
import pandas as pd
import numpy as np
from datetime import datetime , timedelta
#import matplotlib.pyplot as plt
from PIL import Image
import streamlit.components.v1 as components
import plotly.express as px
import plotly.express as px
import pandas_profiling
from streamlit_pandas_profiling import st_profile_report


#librerias del jupyter 
import pandas as pd 
import seaborn as sns
import matplotlib.pyplot as plt 
import numpy as np
from pandas.api.types import is_string_dtype
from pandas.api.types import is_numeric_dtype

from featuring import FeatureEngineeringDf


df =pd.read_csv('../data/train.csv')

data = FeatureEngineeringDf(df)
data.add_goals_value()
data.add_assists_value()
data.add_nations_value()
data.add_champions_score()

#Dataset_fallecidos = data[data['Atenci√≥n'] == 'Fallecido']

###---------Titulos principales -------------------

image = Image.open('hack.png')
st.image(image)
st.write("""
# Proyecto Reto JOBarcelona '22
*Telef√≥nica Team: Arnau Puche vila, Jordi Segura, Alejandro Marcano y Pol *
""")
st.sidebar.header('Navegaci√≥n')

nav_link = st.sidebar.radio(" ", ("Inicio y Datasets Utilizados üßëüèº‚Äçüíª", "An√°lisis Exploratorio üìä", "Modelo Predictivo üî•", "Conclusiones ‚öΩÔ∏è"))

if nav_link == "Inicio y Datasets Utilizados üßëüèº‚Äçüíª":
    st.write('No ha sido desapercibido que el contexto actual es muy delicado en el mundo del f√∫tbol. La audiencia y la falta de un 2020 sin la venta de entradas ha hecho que muchos clubes tengan una postura econ√≥mica muy delicada. Para ello se nos encomienda una tarea de suma responsabilidad, crear un sistema que permita asignar precios a jugadores de forma objetiva, evitando la especulaci√≥n. Los datos asociados a este enunciado son estos. Pensando en un aplicativo para solucionar este problema, cada equipo tiene que proporcionar una soluci√≥n innovadora dentro de su modalidad. El dataset es el siguiente')

    st.write(''' ## Data Science
    El objetivo es poder predecir los precios de los futbolistas de una manera precisa.). Algunas Recomendaciones
    * Utilizar desde el principio Github o el que m√°s os guste
    * Generar unas tareas b√°sicas
    * Llevar preparado todo la idea para que el d√≠a de la final pod√°is programar all√≠ y sobresalir
    * Llevar algunas dudas ready para el d√≠a de la final as√≠ posibles problemas que salgan se pueden resolver
    ''')
   
    st.header("üßëüèº‚Äçüíª Dataset Utilizados")

    df2 =pd.read_csv('../data/Clubs-Ranking.csv')

    df3 =pd.read_csv('../data/Countries-Continents.csv')


    st.write('### Dataset de la competici√≥n')
    st.write(df)
    st.write('### Dataset de Football/Soccer Clubs Ranking')
    st.write('Esta es una lista de listas de clubes de f√∫tbol de asociaci√≥n de todo el mundo. Cada uno de los art√≠culos enlazados desde aqu√≠ incluye listas de clubes que juegan al m√°s alto nivel en cada pa√≠s.')
    st.write("Link del dataset [link](https://www.kaggle.com/datasets/ramjasmaurya/footballsoccer-clubs-ranking)")
    st.write(df2)
    st.write('### Dataset de Pa√≠ses por Continentes')
    st.write('Esto lo usamos para diferenciar competiciones como la Champions Asi√°tica de la Champions Europa, de la Copa Libertadores.')
    st.write("Link del dataset [link](https://github.com/dbouquin/IS_608/blob/master/NanosatDB_munging/Countries-Continents.csv)")
    st.write(df3) 

elif nav_link == "An√°lisis Exploratorio üìä":
    st.header("üìä An√°lisis Exploratorio de Datos")

    st.write('### An√°lisis General de los Datos')
    st.write(df.describe())

    st.write("""
    Podemos ver:
    *   El jugador mayor tiene 46 a√±os, la media de edad es 26 a√±os. 
    *   El jugador con m√°s goles en la Selecci√≥n tiene 86 goles.
    *   El precio medio es 11.6897 y el m√°ximo es 423.0000.

    """)


    st.write('A continuaci√≥n se muestran una serie de gr√°ficos que despliegan informaci√≥n acerca de los datos:')
  
    st.write('### Media de las ligas con precios m√°s altos')

    df['price'] = df['price'].astype('int')
    df_by_selections_nation =df.groupby("league", as_index=False)["price"].mean()
    df_by_selections_nation =df_by_selections_nation.sort_values(by='price', ascending=False)
    fig0 = px.bar(df_by_selections_nation.head(20), x='league', y='price')
    st.plotly_chart(fig0, use_container_width=True)


    st.write('### Media de Edad de los jugadores m√°s costosos')
    df_by_age =df.groupby("age", as_index=False)["price"].mean()
    df_by_age =df_by_age.sort_values(by='price', ascending=False)
    fig0 = px.bar(df_by_age, x='age', y='price')
    st.plotly_chart(fig0, use_container_width=True)

    st.write('### Media de Costo de Jugadores por Posici√≥n')
    df['price'] = df['price'].astype('int32')
    df_by_position =df.groupby("position", as_index=False)["price"].mean()
    df_by_position =df_by_position.sort_values(by='price', ascending=False)
    fig00 = px.bar(df_by_position, x='position', y='price')
    st.plotly_chart(fig00, use_container_width=True)


    p = open("../data/data_profile.html")

    components.html(p.read(),  height= 1600, width=1600)

    #st_profile_report(p)
    
    #pr = df.profile_report()

    #st_profile_report(pr)

    st.write('### Correlaci√≥n del dataset sin filtrar por posici√≥n')

    fig = px.imshow(data.df.corr(), text_auto='.2f', aspect="auto",  color_continuous_scale='BuPu', width=1200, height=800)
    st.plotly_chart(fig, use_container_width=True)


    st.write('### Correlaci√≥n solo de Porteros')
    fig2 = px.imshow(data.filter_by_position(0).corr(), text_auto='.2f', aspect="auto",  color_continuous_scale='BuPu', width=1200, height=800)
    st.plotly_chart(fig2, use_container_width=True)

    st.write('### Correlaci√≥n solo de Defensas')
    fig3 = px.imshow(data.filter_by_position(1).corr(), text_auto='.2f', aspect="auto",  color_continuous_scale='BuPu', width=1200, height=800)
    st.plotly_chart(fig3, use_container_width=True)

    st.write('### Correlaci√≥n solo de Mediocampistas')
    fig4 = px.imshow(data.filter_by_position(2).corr(), text_auto='.2f', aspect="auto",  color_continuous_scale='BuPu', width=1200, height=800)
    st.plotly_chart(fig4, use_container_width=True)

    st.write('### Correlaci√≥n solo de Delanteros')
    fig5 = px.imshow(data.filter_by_position(3).corr(), text_auto='.2f', aspect="auto",  color_continuous_scale='BuPu', width=1200, height=800)
    st.plotly_chart(fig5, use_container_width=True)

    st.write('### Delanteros en las ligas top')
    fig6 = px.imshow(data.filter_top_leagues().corr(), text_auto='.2f', aspect="auto",  color_continuous_scale='BuPu', width=1200, height=800)
    st.plotly_chart(fig6, use_container_width=True)

    st.write("""## Feature Engineering
                    * Seg√∫n la liga del jugador:
                        - Multiplicar los goles o las asistencias de los jugadores por una score que puntua la import√°ncia de las ligas.

                    * Seg√∫n la nacionalidad:
                        - Multiplicar el valor de veces seleccionado por una score que puntua la import√°ncia de las selecciones.
                        - El paso anterior con los goles tambi√©n.
            """)
    
    st.write(''' 
    
        * ATTENTION
        - With that data, defenders will be valued poorly. We can't see her performance, because we've got their goals but not how many goals scored the teams against them. Same with Goalkeepers.

    * MISSING INFO
        - Goals /game --> how many minutes to score a goal?
        - Goals in top matches? Finals...
        - Experience in big matches
        - Historical injuries
        - Player mentality
        - Player position during the game
    
    * CURIOUS FACTS TO ADD INFO
        - Goal value increases if the football tendency is to score less goals in a match.
        - Global economy. If more people whats football and moves more money, players value will increase.
    
    
    ''')

elif nav_link == "Modelo Predictivo üî•":
    st.write(
    """## Modelos de Predicci√≥n 
    """)


elif nav_link == "Conclusiones ‚öΩÔ∏è":
    st.write("""
    ## Conclusiones
    *   Con informaci√≥n m√°s precisa, el modelo ser√° m√°s preciso
        - Con los datos del dataset train.py quer√≠amos a√±adir una nueva columna en d√≥nde se calcular√≠a un score para los goles de champions, es decir, √©s m√°s dif√≠cil marcar en la Champions que en el torneo continental de Oceania.
        - Informaci√≥n extra:
            + Lesiones historicas
            + Posici√≥n del jugador durante el partido. 
            + Experi√®ncia en grandese partidos
            + Goles/minutos
        - Falta informaci√≥n para clasificar los porteros
        - Ser√≠a bueno ver la evoluci√≥n de los goles/temporada en el mundo del futbol para ajustar el valor del gol en el momento actual.
        - Ver como evoluciona la econom√≠a en el mundo del f√∫tbol, hace 20 a√±os los jugadores costaban menos.


    *   Conclusiones del modelo

    """)